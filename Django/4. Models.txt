=> A model is the single, definitive source of information about your data.

# Declaring Model

	from django.db import models
	class Model_Name(models.Model):
		var = models.FieldTypes()
		def __str__(self):
			return self.var

# FieldTypes 
	Binary,Boolean,Char,Date,DateTime,Decimal,Email,File,FilePath,Float,Image,
	Integer,Slug,Text,Time,URL,ForeignKey(ManyToOne),ManyToMany,OneToOne

Field Options -> null(empty values as NULL),blank,choices(list of tuples),default,editable,
			primary_key,unique,max_length,auto_now(last modified),auto_now_add(first time),
			decimal_places,upload_to,on_delete(Cascade,Protect,Restrict,set_default,set(),do_nothing),
			verbose_name(first string argument of model)
ManyToManyField -> 'through' gives option to connect two different models and keeping extra unique info about them
			  e.g. -> Person, Group(manytomany(person,through=membership), Membership(F.K.(person,group))

Meta Options -> class Meta:
			ordering=[""], db_table for table name, verbose_name, verbose_name_plural
Model Methods -> 	def custom_function_row(self):
				return something
Predefined ->  def save(self,*args,**kwargs):	or delete()
			  super().save(*args,**kwargs)
		save() or delete() can be used to call other functions as well in model itself